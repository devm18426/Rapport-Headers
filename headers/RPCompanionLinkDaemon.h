/*
* This header is generated by classdump-dyld 1.0
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/rapportd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/RPMessageable.h>
#import <libobjc.A.dylib/RPSubDaemonable.h>

@protocol OS_dispatch_source, OS_os_transaction, OS_dispatch_queue;
@class NSMutableDictionary, NSUserDefaults, SFDeviceDiscovery, SFService, CUBLEServer, NSMutableSet, CUBonjourAdvertiser, CUBonjourBrowser, NSObject, NSData, NSString, CUSystemMonitor, CUBluetoothScalablePipe, RPConnection, SFClient, CUHomeKitManager, CUNetLinkManager, RPHomeKitManager, CUSleepWakeMonitor, CUTCPServer, CUWiFiManager, NSXPCInterface, NSXPCListener, RPHIDDaemon, RPMediaControlDaemon, RPSiriDaemon, RPCompanionLinkDevice;

@interface RPCompanionLinkDaemon : NSObject <NSXPCListenerDelegate, RPMessageable, RPSubDaemonable> {

	char _activateCalled;
	NSMutableDictionary* _activeDevices;
	int _airplayBuddyNotReachableState;
	int _airplayLeaderState;
	NSUserDefaults* _airplayPrefs;
	NSMutableDictionary* _bleDevices;
	SFDeviceDiscovery* _bleActionDiscovery;
	unsigned _bleActionDiscoveryID;
	NSMutableDictionary* _bleClientConnections;
	SFDeviceDiscovery* _bleDiscovery;
	unsigned long long _bleDiscoveryControlFlags;
	char _bleDiscoveryForce;
	unsigned _bleDiscoveryID;
	char _bleDiscoveryScreenOff;
	SFService* _bleNeedsCLinkAdvertiser;
	NSMutableDictionary* _bleNeedsCLinkDevices;
	SFDeviceDiscovery* _bleNeedsCLinkScanner;
	unsigned _bleNeedsCLinkScannerID;
	char _bleProximityDetection;
	CUBLEServer* _bleServer;
	NSMutableSet* _bleServerConnections;
	CUBonjourAdvertiser* _bonjourAdvertiser;
	CUBonjourAdvertiser* _bonjourAWDLAdvertiser;
	char _bonjourAWDLAdvertiserForce;
	NSMutableDictionary* _bonjourAWDLDevices;
	CUBonjourBrowser* _bonjourBrowser;
	CUBonjourBrowser* _bonjourBrowserAWDL;
	char _bonjourBrowserAWDLForce;
	unsigned long long _bonjourReevaluateNextTicks;
	NSObject*<OS_dispatch_source> _bonjourReevaluateTimer;
	NSData* _btAdvAddrData;
	NSString* _btAdvAddrStr;
	CUSystemMonitor* _btAdvAddrMonitor;
	char _prefBTPipeEnabled;
	CUBluetoothScalablePipe* _btPipe;
	RPConnection* _btPipeConnection;
	CUBluetoothScalablePipe* _btPipeHighPriority;
	unsigned _cnxIDLast;
	NSString* _deviceAuthTagStr;
	NSData* _deviceAWDLRandomID;
	NSData* _discoveryNonceData;
	SFClient* _duetSyncClient;
	char _disabled;
	NSMutableDictionary* _interestEvents;
	NSMutableDictionary* _interestPeers;
	char _invalidateCalled;
	char _invalidateDone;
	char _fixedSoundBoardNameIssue;
	NSData* _homeKitAuthTag;
	char _homeKitForceGetIdentity;
	char _homeKitGettingIdentity;
	NSData* _homeKitIRK;
	NSData* _homeKitLTPK;
	CUHomeKitManager* _homeKitManager;
	NSData* _homeKitRotatingID;
	char _homeKitWaiting;
	CUNetLinkManager* _netLinkManager;
	char _mediaAccessControlKVO;
	char _mediaRemoteIDGetting;
	char _mediaRouteIDGetting;
	char _miscStarted;
	NSObject*<OS_os_transaction> _osTransaction;
	RPConnection* _personalCnx;
	char _receiveHomeKitPairingUpdated;
	NSMutableDictionary* _registeredEvents;
	NSMutableSet* _registeredProfileIDs;
	NSMutableDictionary* _registeredRequests;
	RPHomeKitManager* _rpHomeKitManager;
	unsigned _sessionIDLast;
	char _serverBonjourInfraPairing;
	CUSleepWakeMonitor* _sleepWakeMonitor;
	NSUserDefaults* _soundBoardPrefs;
	char _soundBoardUserLeader;
	char _soundBoardUserLeaderKVO;
	unsigned long long _startTicks;
	unsigned long long _startTicksFull;
	RPConnection* _stereoCnx;
	CUSystemMonitor* _systemMonitor;
	NSMutableDictionary* _tcpClientConnections;
	NSMutableSet* _tcpServerConnections;
	CUTCPServer* _tcpServer;
	NSMutableDictionary* _unauthDevices;
	NSData* _uniqueIDData;
	NSString* _uniqueIDStr;
	CUWiFiManager* _wifiManager;
	unsigned _xidLast;
	NSMutableSet* _xpcConnections;
	NSXPCInterface* _xpcClientInterface;
	NSXPCInterface* _xpcServerInterface;
	NSXPCListener* _xpcListener;
	unsigned _xpcLastID;
	NSMutableDictionary* _xpcMatchingMap;
	char _prefAppSignIn;
	char _prefBLEClient;
	char _prefClientEnabled;
	char _prefCommunal;
	char _prefHomeKitConfigured;
	char _prefHomeKitEnabled;
	char _prefIPEnabled;
	unsigned _prefMaxConnectionCount;
	char _prefServerBonjourAlways;
	char _prefServerBonjourOpportunitistic;
	char _prefServerEnabled;
	char _prefServerShouldRun;
	RPHIDDaemon* _hidDaemon;
	char _prefHIDEnabled;
	RPMediaControlDaemon* _mediaControlDaemon;
	char _prefMediaControlEnabled;
	RPSiriDaemon* _siriDaemon;
	char _prefSiriEnabled;
	char _prefTouchEnabled;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	RPCompanionLinkDevice* _localDeviceInfo;
	NSMutableSet* _activeServers;
	NSMutableDictionary* _activeSessions;

}

@property (nonatomic,retain) NSMutableSet * activeServers;                              //@synthesize activeServers=_activeServers - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * activeSessions;                      //@synthesize activeSessions=_activeSessions - In the implementation block
@property (nonatomic,readonly) RPCompanionLinkDevice * localDeviceInfo;                 //@synthesize localDeviceInfo=_localDeviceInfo - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> dispatchQueue; 
+(id)sharedCompanionLinkDaemon;
-(id)init;
-(void)_activate;
-(void)invalidate;
-(char)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)_invalidate;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(void)_update;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)activate;
-(void)_invalidated;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)registerRequestID:(id)arg1 options:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)sendRequestID:(id)arg1 request:(id)arg2 destinationID:(id)arg3 options:(id)arg4 responseHandler:(/*^block*/id)arg5 ;
-(id)descriptionWithLevel:(int)arg1 ;
-(void)registerEventID:(id)arg1 options:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)deregisterEventID:(id)arg1 ;
-(void)sendEventID:(id)arg1 event:(id)arg2 options:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)deregisterRequestID:(id)arg1 ;
-(void)sendRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(/*^block*/id)arg4 ;
-(void)_xpcConnectionInvalidated:(id)arg1 ;
-(void)sendEventID:(id)arg1 event:(id)arg2 destinationID:(id)arg3 options:(id)arg4 completion:(/*^block*/id)arg5 ;
-(RPCompanionLinkDevice *)localDeviceInfo;
-(NSMutableDictionary *)activeSessions;
-(void)setActiveSessions:(NSMutableDictionary *)arg1 ;
-(void)prefsChanged;
-(void)_btPipeEnsureStarted;
-(void)_btPipeEnsureStopped;
-(void)_clientEnsureStopped;
-(void)_serverEnsureStopped;
-(void)_serverEnsureStarted;
-(void)_clientEnsureStarted;
-(NSMutableSet *)activeServers;
-(void)daemonInfoChanged:(unsigned long long)arg1 ;
-(char)diagnosticCommand:(id)arg1 params:(id)arg2 ;
-(char)addXPCMatchingToken:(unsigned long long)arg1 event:(id)arg2 handler:(/*^block*/id)arg3 ;
-(char)removeXPCMatchingToken:(unsigned long long)arg1 ;
-(id)_getAppleID;
-(void)_bleServerEnsureStopped;
-(void)_duetSyncEnsureStopped;
-(void)_homeKitEnsureStopped;
-(void)_hidEnsureStopped;
-(void)_mediaControlEnsureStopped;
-(void)_miscEnsureStopped;
-(void)_siriEnsureStopped;
-(void)_sleepWakeMonitorEnsureStopped;
-(void)_reachabilityEnsureStopped;
-(void)_localDeviceCleanup;
-(void)_clientBonjourReevaluateUnauthDevices;
-(void)_disconnectUnpairedDevices;
-(void)_disconnectRemovedSharedHomeDevices;
-(void)_clientBonjourReevaluateAllDevices;
-(id)_discoveryNonceOrRotate:(char)arg1 ;
-(void)_homeKitUpdateInfo:(char)arg1 ;
-(void)_reportXPCMatchingDiscoveryCLink;
-(void)_updateForXPCClientChange;
-(void)_updateAssertions;
-(void)_localDeviceUpdate;
-(void)_homeKitEnsureStarted;
-(void)_reachabilityEnsureStarted;
-(void)_sleepWakeMonitorEnsureStarted;
-(void)_bleServerEnsureStarted;
-(void)_hidEnsureStarted;
-(void)_mediaControlEnsureStarted;
-(void)_miscEnsureStarted;
-(void)_siriEnsureStarted;
-(void)_clientBLEDiscoveryEnsureStarted;
-(void)_clientBLEDiscoveryEnsureStopped;
-(char)_clientBLEActionDiscoveryShouldRun;
-(void)_clientBLEActionDiscoveryEnsureStarted;
-(void)_clientBLEActionDiscoveryEnsureStopped;
-(void)_clientBonjourEnsureStarted;
-(void)_clientBonjourEnsureStopped;
-(char)_clientBLENeedsCLinkAdvertiserShouldRun;
-(void)_clientBLENeedsCLinkAdvertiserEnsureStarted;
-(void)_clientBLENeedsCLinkAdvertiserEnsureStopped;
-(char)_clientBonjourAWDLBrowserShouldRun;
-(void)_clientBonjourAWDLBrowserEnsureStarted;
-(void)_clientBonjourAWDLBrowserEnsureStopped;
-(void)_clientBLEDiscoveryDeviceFound:(id)arg1 ;
-(void)_clientBLEDiscoveryDeviceLost:(id)arg1 force:(char)arg2 ;
-(void)_clientReportChangedDevice:(id)arg1 changes:(unsigned)arg2 ;
-(void)_clientReportFoundDevice:(id)arg1 ;
-(void)_clientReportLostDevice:(id)arg1 ;
-(void)_clientPurgeUnauthAWDLDevices;
-(char)_clientBonjourFoundDevice:(id)arg1 reevaluate:(char)arg2 ;
-(void)_clientBonjourLostDevice:(id)arg1 ;
-(char)_homeKitAuthMatchForBonjourDevice:(id)arg1 ;
-(void)_clientBonjourFoundUnauthDevice:(id)arg1 isAWDLDevice:(char)arg2 ;
-(id)_homeKitDecryptRotatingIDForBonjourDevice:(id)arg1 ;
-(id)_findConnectionByID:(id)arg1 ;
-(void)_activeDeviceChangedForConnection:(id)arg1 bonjourDevice:(id)arg2 ;
-(void)_clientConnectionStart:(id)arg1 controlFlags:(unsigned long long)arg2 uniqueID:(id)arg3 identity:(id)arg4 ;
-(void)_clientBonjourLostUnauthDevice:(id)arg1 ;
-(void)_clientBonjourAWDLBrowserFoundDevice:(id)arg1 ;
-(void)_clientBonjourAWDLBrowserLostDevice:(id)arg1 ;
-(char)_clientConnectionStartOnDemand:(id)arg1 xpcCnx:(id)arg2 error:(id*)arg3 ;
-(void)_clientConnectionEnded:(id)arg1 uniqueID:(id)arg2 ;
-(void)_stereoDeviceUpdate:(int)arg1 ;
-(void)_activeDeviceChanged:(id)arg1 changes:(unsigned)arg2 ;
-(void)_receivedEventID:(id)arg1 event:(id)arg2 options:(id)arg3 unauth:(char)arg4 cnx:(id)arg5 ;
-(void)_receivedRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(/*^block*/id)arg4 unauth:(char)arg5 cnx:(id)arg6 ;
-(void)_connectionStateChanged:(int)arg1 cnx:(id)arg2 ;
-(id)_filterHomeKitUserIdentifiers:(id)arg1 ;
-(void)_clientOnDemandDiscoveryStart:(id)arg1 xpcCnx:(id)arg2 ;
-(void)_clientConnectionEndedUnauth:(id)arg1 publicID:(id)arg2 ;
-(char)_serverBonjourShouldRun;
-(void)_serverTCPEnsureStarted;
-(void)_serverTCPEnsureStopped;
-(void)_serverBTAddressMonitorEnsureStarted;
-(void)_serverBLENeedsCLinkScannerEnsureStarted;
-(void)_serverBonjourEnsureStarted;
-(void)_serverBonjourEnsureStopped;
-(void)_serverBonjourAWDLAdvertiserEnsureStarted;
-(void)_serverBonjourAWDLAdvertiserEnsureStopped;
-(void)_serverBLENeedsCLinkScannerEnsureStopped;
-(void)_serverBTAddressMonitorEnsureStopped;
-(char)_serverBLENeedsCLinkScannerScreenOff;
-(void)_serverBLENeedsCLinkScannerDeviceFound:(id)arg1 ;
-(void)_serverBLENeedsCLinkScannerDeviceLost:(id)arg1 ;
-(void)_serverBonjourUpdateTXT;
-(id)_serverBonjourAuthTagStringWithData:(id)arg1 ;
-(id)_serverBonjourAuthTagString;
-(int)_localMediaAccessControlSetting;
-(void)_serverBonjourAWDLAdvertiserUpdateTXT;
-(void)_serverBTAddressChanged;
-(void)_serverTCPHandleConnectionStarted:(id)arg1 ;
-(void)_connectionConfigureCommon:(id)arg1 ;
-(void)_serverTCPHandleConnectionEnded:(id)arg1 ;
-(char)isDevice:(id)arg1 equalTo:(id)arg2 ;
-(void)_bleServerHandleConnectionStarted:(id)arg1 ;
-(void)_bleServerHandleConnectionEnded:(id)arg1 ;
-(void)_btPipeHandleStateChanged:(id)arg1 ;
-(void)_btPipeSetup:(id)arg1 withPriority:(int)arg2 ;
-(void)_btPipeTearDown:(id)arg1 ;
-(void)_btPipeConnectionStart;
-(void)_btPipeConnectionEnded:(id)arg1 ;
-(void)_btPipeSyncKeysIfNeeded;
-(void)_sessionHandlePeerDisconnect:(id)arg1 ;
-(void)_personalDeviceUpdate;
-(void)_interestRemoveForCnx:(id)arg1 ;
-(id)_findExistingActiveDevice:(id)arg1 ;
-(void)_serverTCPRemoveConnectionsWithIdentifier:(id)arg1 exceptConnection:(id)arg2 ;
-(void)_activeDeviceAdded:(id)arg1 cnx:(id)arg2 ;
-(void)_activeDeviceRemoved:(id)arg1 cnx:(id)arg2 ;
-(void)_forEachConnectionWithHandler:(/*^block*/id)arg1 ;
-(char)_destinationID:(id)arg1 matchesCnx:(id)arg2 ;
-(void)_mediaRemoteIDGet;
-(void)_mediaRouteIDGet;
-(void)_duetSyncEnsureStarted;
-(void)_interestSendEventID:(id)arg1 event:(id)arg2 ;
-(void)_miscHandleSpeakRequest:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_sessionHandleStartRequest:(id)arg1 options:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)_sessionHandleStopRequest:(id)arg1 options:(id)arg2 cnx:(id)arg3 responseHandler:(/*^block*/id)arg4 ;
-(void)_registerConnectionRequestID:(id)arg1 options:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)_homeKitSelfAccessoryMediaSystemUpdated:(int)arg1 ;
-(int)_airPlayLeaderStateUncached;
-(void)_homeKitSelfAccessoryMediaAccessUpdated;
-(void)_homeKitSelfAccessoryUpdated;
-(void)_homeKitGetPairingIdentities;
-(void)_homeKitPairingUpdated:(id)arg1 ;
-(void)_homeKitUpdateUserIdentifiers;
-(void)_homeKitIdentityUpdated:(id)arg1 error:(id)arg2 ;
-(void)_homeKitGetUserInfo:(id)arg1 ;
-(void)_disconnectUnauthConnections;
-(void)_forEachMatchingDestinationID:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)_interestReceived:(id)arg1 cnx:(id)arg2 ;
-(char)_allowMessageForRegistrationOptions:(id)arg1 cnx:(id)arg2 ;
-(void)sendRequestID:(id)arg1 request:(id)arg2 destinationID:(id)arg3 xpcID:(unsigned)arg4 options:(id)arg5 responseHandler:(/*^block*/id)arg6 ;
-(void)_updateForXPCServerChange;
-(char)_clientConnectionStartUnauth:(id)arg1 client:(id)arg2 publicID:(id)arg3 xpcCnx:(id)arg4 error:(id*)arg5 ;
-(void)_clientOnDemandAWDLDiscoveryStartForXPC:(id)arg1 ;
-(id)findConnectedDeviceForIdentifier:(id)arg1 controlFlags:(unsigned long long)arg2 cnx:(id*)arg3 ;
-(id)_findDeviceWithDevice:(id)arg1 deviceMap:(id)arg2 matchedIdentifier:(id*)arg3 ;
-(id)findUnauthDeviceForIdentifier:(id)arg1 ;
-(void)interestRegisterEventID:(id)arg1 peerIdentifier:(id)arg2 owner:(id)arg3 ;
-(void)interestDeregisterEventID:(id)arg1 peerIdentifier:(id)arg2 owner:(id)arg3 ;
-(void)sessionStartSend:(id)arg1 session:(id)arg2 xpcID:(unsigned)arg3 completion:(/*^block*/id)arg4 ;
-(void)sessionStopSend:(id)arg1 session:(id)arg2 xpcID:(unsigned)arg3 completion:(/*^block*/id)arg4 ;
-(long long)_sessionsActiveOnConnection:(id)arg1 xpcConnection:(id)arg2 ;
-(void)setActiveServers:(NSMutableSet *)arg1 ;
@end

