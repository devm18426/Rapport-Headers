/*
* This header is generated by classdump-dyld 1.0
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/rapportd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol RPMessageable;
#import <rapportd/rapportd-Structs.h>
@class NSMutableDictionary;

@interface RPHIDDaemon : NSObject {

	NSMutableDictionary* _activeTouchEventMap;
	unsigned long long _epochNanos;
	unsigned long long _epochTicks;
	unsigned long long _epochResetTicks;
	IOHIDEventSystemClientRef _hidClient;
	IOHIDEventSystemClientRef _hidGCClient;
	IOHIDUserDeviceRef _hidGCDevice;
	unsigned long long _hidGCSenderID;
	char _hidGCSenderIDInitialized;
	unsigned long long _hidSenderID;
	char _hidSenderIDInitialized;
	IOHIDUserDeviceRef _hidTouchDevice;
	unsigned long long _lastEventTicks;
	unsigned long long _lastSelectButtonDown;
	id<RPMessageable> _messenger;

}

@property (nonatomic,retain) id<RPMessageable> messenger;              //@synthesize messenger=_messenger - In the implementation block
-(void)invalidate;
-(char)activateAndReturnError:(id*)arg1 ;
-(id<RPMessageable>)messenger;
-(void)setMessenger:(id<RPMessageable>)arg1 ;
-(void)_handleGameControllerEvent:(id)arg1 ;
-(void)registeredEventID:(id)arg1 ;
-(void)deregisteredEventID:(id)arg1 ;
-(void)_handleCommand:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_handleTouchStart:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_handleTouchStop:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_handleTouchEvent:(id)arg1 ;
-(void)_handleGameControllerStart:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_handleGameControllerStop:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_injectKeyboardEventUsagePage:(unsigned)arg1 usageCode:(unsigned)arg2 buttonState:(int)arg3 ;
-(void)_handleSelectWithButtonState:(int)arg1 ;
-(void)_activateScreenSaverWithResponseHandler:(/*^block*/id)arg1 ;
-(void)_sleepSystemWithResponseHandler:(/*^block*/id)arg1 ;
-(void)_wakeSystemWithResponseHandler:(/*^block*/id)arg1 ;
-(void)_setupHIDSenderIDIfNeeded;
-(char)_setupHIDGCDeviceWithOptions:(id)arg1 andReturnError:(id*)arg2 ;
-(void)_setupHIDGCSenderIDIfNeeded;
-(char)_setupHIDTouchDeviceAndReturnError:(id*)arg1 ;
@end

