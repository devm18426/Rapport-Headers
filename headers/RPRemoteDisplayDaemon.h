/*
* This header is generated by classdump-dyld 1.0
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /usr/libexec/rapportd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/RPSubDaemonable.h>

@protocol OS_dispatch_queue;
@class NSMutableSet, RPRemoteDisplayXPCConnection, SFDeviceDiscovery, SFService, CUBonjourAdvertiser, NSMutableDictionary, CUBonjourBrowser, CUSystemMonitor, NSData, NSString, RPCompanionLinkDevice, NSMutableArray, CUTCPServer, NSXPCListener, RPXPCMatchingEntry, NSObject;

@interface RPRemoteDisplayDaemon : NSObject <NSXPCListenerDelegate, RPSubDaemonable> {

	NSMutableSet* _activatedDiscoverySet;
	RPRemoteDisplayXPCConnection* _activatedServerXPCCnx;
	NSMutableSet* _activatedSessionSet;
	SFDeviceDiscovery* _bleDiscovery;
	unsigned _bleDiscoveryID;
	SFService* _bleNeedsAWDLAdvertiser;
	SFDeviceDiscovery* _bleNeedsAWDLScanner;
	unsigned _bleNeedsAWDLScannerID;
	CUBonjourAdvertiser* _bonjourAdvertiser;
	CUBonjourAdvertiser* _bonjourAWDLAdvertiser;
	char _bonjourAWDLAdvertiserForce;
	NSMutableDictionary* _bonjourAWDLDevices;
	CUBonjourBrowser* _bonjourBrowser;
	CUBonjourBrowser* _bonjourBrowserAWDL;
	char _bonjourBrowserAWDLForce;
	CUSystemMonitor* _btAdvAddrMonitor;
	NSData* _btAdvAddrData;
	NSString* _btAdvAddrStr;
	unsigned _cnxIDLast;
	NSString* _deviceAuthTagStr;
	NSData* _deviceAWDLRandomID;
	NSMutableDictionary* _discoveredDevices;
	char _invalidateCalled;
	char _invalidateDone;
	RPCompanionLinkDevice* _localDeviceInfo;
	NSMutableDictionary* _needsAWDLDevices;
	unsigned _sessionIDLast;
	CUSystemMonitor* _systemMonitor;
	NSMutableArray* _tcpBufferedConnections;
	NSMutableDictionary* _tcpServerConnections;
	CUTCPServer* _tcpServer;
	NSMutableDictionary* _unresolvedDevices;
	NSMutableSet* _xpcConnections;
	unsigned _xpcLastID;
	NSXPCListener* _xpcListener;
	NSMutableDictionary* _xpcMatchingDiscoveryMap;
	RPXPCMatchingEntry* _xpcMatchingServer;
	char _prefBLEClient;
	char _prefBLEServer;
	char _prefClientEnabled;
	char _prefIgnoreRemoteDisplayChecks;
	char _prefNoInfra;
	char _prefServerBonjourInfra;
	char _prefServerEnabled;
	NSObject*<OS_dispatch_queue> _dispatchQueue;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> dispatchQueue;              //@synthesize dispatchQueue=_dispatchQueue - In the implementation block
-(id)init;
-(void)_activate;
-(void)invalidate;
-(char)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)_invalidate;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(void)_update;
-(void)activate;
-(void)_invalidated;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)descriptionWithLevel:(int)arg1 ;
-(void)_xpcConnectionInvalidated:(id)arg1 ;
-(void)prefsChanged;
-(void)_clientEnsureStopped;
-(void)_serverEnsureStopped;
-(void)_serverEnsureStarted;
-(void)_clientEnsureStarted;
-(void)daemonInfoChanged:(unsigned long long)arg1 ;
-(char)diagnosticCommand:(id)arg1 params:(id)arg2 ;
-(char)addXPCMatchingToken:(unsigned long long)arg1 event:(id)arg2 handler:(/*^block*/id)arg3 ;
-(char)removeXPCMatchingToken:(unsigned long long)arg1 ;
-(void)_localDeviceUpdate;
-(void)_clientBLEDiscoveryEnsureStarted;
-(void)_clientBLEDiscoveryEnsureStopped;
-(void)_clientBonjourEnsureStarted;
-(void)_clientBonjourEnsureStopped;
-(char)_clientBonjourAWDLBrowserShouldRun;
-(void)_clientBonjourAWDLBrowserEnsureStarted;
-(void)_clientBonjourAWDLBrowserEnsureStopped;
-(void)_clientBLEDiscoveryDeviceFound:(id)arg1 ;
-(char)_clientBonjourFoundDevice:(id)arg1 reevaluate:(char)arg2 ;
-(void)_clientBonjourLostDevice:(id)arg1 ;
-(void)_clientBonjourAWDLBrowserFoundDevice:(id)arg1 ;
-(void)_clientBonjourAWDLBrowserLostDevice:(id)arg1 ;
-(void)_serverTCPEnsureStarted;
-(void)_serverTCPEnsureStopped;
-(void)_serverBonjourEnsureStarted;
-(void)_serverBonjourEnsureStopped;
-(void)_serverBonjourAWDLAdvertiserEnsureStarted;
-(void)_serverBonjourAWDLAdvertiserEnsureStopped;
-(void)_serverBonjourUpdateTXT;
-(id)_serverBonjourAuthTagStringWithData:(id)arg1 ;
-(id)_serverBonjourAuthTagString;
-(void)_serverBonjourAWDLAdvertiserUpdateTXT;
-(void)_serverTCPHandleConnectionStarted:(id)arg1 ;
-(void)_btAddressMonitorEnsureStopped;
-(void)_clientBonjourReevaluateDevices;
-(void)_updateXPCMatchingDiscovery;
-(void)_btAddressMonitorEnsureStarted;
-(char)_clientBLENeedsAWDLAdvertiserShouldRun;
-(void)_clientBLENeedsAWDLAdvertiserEnsureStarted;
-(void)_clientBLENeedsAWDLAdvertiserEnsureStopped;
-(void)_clientLostAllDevices;
-(void)_clientBLEDiscoveryDeviceLost:(id)arg1 ;
-(void)_clientBonjourReconfirmDevice:(id)arg1 reason:(const char*)arg2 ;
-(void)_clientBonjourLostUnresolvedDevice:(id)arg1 ;
-(void)_clientBonjourFoundUnresolvedDevice:(id)arg1 ;
-(char)_serverBonjourAWDLNeeded;
-(void)_serverBLENeedsAWDLScannerEnsureStarted;
-(void)_serverBLENeedsAWDLScannerEnsureStopped;
-(char)_serverBLENeedsAWDLScannerScreenOff;
-(void)_serverBLENeedsAWDLScannerDeviceFound:(id)arg1 ;
-(void)_serverBLENeedsAWDLScannerDeviceLost:(id)arg1 ;
-(void)_btAddressChanged;
@end

